{"version":3,"sources":["components/LoginPage.js","components/SignupPage.js","components/AuthenticationPage.js","components/NotificationsPannel.js","components/ChatBox.js","components/ContactList.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","props","state","validUsername","undefined","validPassword","tempUsername","handlePasswordInput","bind","handleUsernameInput","loginRequestSender","loginResponseHandler","e","this","setState","test","target","value","document","querySelector","classList","add","api","username","password","status","apiResponse","JSON","parse","response","cookie","token","location","reload","alert","remove","className","id","onChange","type","placeholder","formNoValidate","onClick","disabled","React","Component","SignupPage","passwordsMatch","handleInput","signupRequestSender","signupResponseHandler","AuthenticationPage","userAlreadyRegistered","userWantsToLogin","userWantsToRegister","NotificationsPannel","hidden","isOpen","notifications","map","notif","data-msg","_id","data-user","sender","data-time","time","data-status","clickCallback","senderName","content","substring","length","ChatBox","messages","user","closeChat","msg","onMessageEdit","onMessageDelete","onSubmit","onMessageSubmit","ContactList","users","registered","data-id","MainPage","deviceWidth","Math","floor","window","innerWidth","notificationsPannelOpen","lastStatusUpdate","guestsListOpen","selectedContact","guests","chat","unread","requestUpdates","handleUpdates","selectUser","renderMessagesApiResponse","handleMessageSendingApiResponse","toggleNotificationsPannel","requestMessageDelete","handleMessageDeletion","requestEditingMessage","handleEditingMessage","sendMessage","updateInterval","setInterval","console","log","uri","beep","play","newState","forEach","push","timeLastRegisteredUser","timeLastUnreadMessage","currentUser","filter","msgInput","newChat","preventDefault","getElementById","newContent","i","currentMsg","newMsg","prompt","handler","confirm","login","logout","App","indexOf","split","page","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5bad113.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validUsername: undefined,\r\n      validPassword: undefined,\r\n      tempUsername: \"\"\r\n    };\r\n    this.handlePasswordInput = this.handlePasswordInput.bind(this);\r\n    this.handleUsernameInput = this.handleUsernameInput.bind(this);\r\n    this.loginRequestSender = this.loginRequestSender.bind(this);\r\n    this.loginResponseHandler = this.loginResponseHandler.bind(this);\r\n  }\r\n  handleUsernameInput(e) {\r\n    let usernameRegex = /^[a-zA-Z0-9]{5,30}$/;\r\n    this.setState({ validUsername: usernameRegex.test(e.target.value) });\r\n  }\r\n  handlePasswordInput(e) {\r\n    let passwordRegex = /^.{7,200}$/;\r\n    this.setState({ validPassword: passwordRegex.test(e.target.value) });\r\n  }\r\n  loginRequestSender() {\r\n    var btn = document.querySelector(\"#login-button\");\r\n    btn.classList.add(\"loading\");\r\n    this.state.tempUsername = document.querySelector(\"#loginName\").value; // eslint-disable-line\r\n    api(\"POST\", \"/user/login\", this.loginResponseHandler, {// eslint-disable-line\r\n      username: this.state.tempUsername,\r\n      password: document.querySelector(\"#loginPassword\").value\r\n    });\r\n  }\r\n  loginResponseHandler(e) {\r\n    if (e.target.status === 200) {\r\n      var apiResponse = JSON.parse(e.target.response);\r\n      document.cookie = \"guestname=\" + this.state.tempUsername;\r\n      document.cookie = \"sessionid=\" + apiResponse.token;\r\n      document.location.reload();\r\n    } else if (e.target.status === 401) {\r\n      alert(\"Incorrect username or password\");\r\n    }\r\n    var btn = document.querySelector(\"#login-button\");\r\n    btn.classList.remove(\"loading\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"AuthenticationForm\">\r\n          <h4>Login to continue</h4>\r\n          <div className=\"hiddenWrapper\">\r\n            <input\r\n              id=\"loginName\"\r\n              className={this.state.validUsername !== false ? \"\" : \"badInput\"}\r\n              onChange={this.handleUsernameInput}\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              formNoValidate\r\n            />\r\n            {this.state.validUsername !== false ? (\r\n              \"\"\r\n            ) : (\r\n              <span className=\"warning\"> Invalid username </span>\r\n            )}\r\n          </div>\r\n          <div className=\"hiddenWrapper\">\r\n            <input\r\n              id=\"loginPassword\"\r\n              className={this.state.validPassword !== false ? \"\" : \"badInput\"}\r\n              onChange={this.handlePasswordInput}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              formNoValidate\r\n            />\r\n            {this.state.validPassword !== false ? (\r\n              \"\"\r\n            ) : (\r\n              <span className=\"warning\"> Your password is too short </span>\r\n            )}\r\n          </div>\r\n          <div className=\"hiddenWrapper\">\r\n            <input\r\n              onClick={this.loginRequestSender}\r\n              id=\"login-button\"\r\n              type=\"button\"\r\n              value=\"Login\"\r\n              disabled={\r\n                this.state.validUsername && this.state.validPassword\r\n                  ? false\r\n                  : true\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nclass SignupPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validUsername: undefined,\r\n      validPassword: undefined,\r\n      passwordsMatch: undefined,\r\n      tempUsername: \"\"\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.signupRequestSender = this.signupRequestSender.bind(this);\r\n    this.signupResponseHandler = this.signupResponseHandler.bind(this);\r\n  }\r\n  handleInput() {\r\n    let usernameRegex = /^[a-zA-Z0-9]{5,30}$/;\r\n    let passwordRegex = /^.{7,200}$/;\r\n    this.setState({ validUsername: usernameRegex.test(document.querySelector(\"#loginName\").value) });\r\n    this.setState({ validPassword: passwordRegex.test(document.querySelector(\"#loginPassword\").value) });\r\n    this.setState({\r\n      passwordsMatch:\r\n        document.querySelector(\"#confirmPassword\").value ===\r\n        document.querySelector(\"#loginPassword\").value\r\n    });\r\n  }\r\n\r\n  signupRequestSender() {\r\n    var btn = document.querySelector(\"#signup-button\");\r\n    btn.classList.add(\"loading\");\r\n    this.state.tempUsername = document.querySelector(\"#loginName\").value; // eslint-disable-line\r\n    api(\"POST\", \"/user/signup\", this.signupResponseHandler, {// eslint-disable-line\r\n      username: this.state.tempUsername,\r\n      password: document.querySelector(\"#loginPassword\").value\r\n    });\r\n  }\r\n  signupResponseHandler(e) {\r\n    if (e.target.status === 200) {\r\n      var apiResponse = JSON.parse(e.target.response);\r\n      document.cookie = \"guestname=\" + this.state.tempUsername;\r\n      document.cookie = \"sessionid=\" + apiResponse.token;\r\n      document.location.reload();\r\n    } else if (e.target.status === 451) {\r\n      alert(\"Username is not available\");\r\n    }\r\n    var btn = document.querySelector(\"#signup-button\");\r\n    btn.classList.remove(\"loading\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"AuthenticationForm\">\r\n          <h4>Register for free</h4>\r\n          <div className=\"hiddenWrapper\">\r\n            <input\r\n              id=\"loginName\"\r\n              className={this.state.validUsername !== false ? \"\" : \"badInput\"}\r\n              onChange={this.handleInput}\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              formNoValidate\r\n            />\r\n            {this.state.validUsername !== false? \"\" : \r\n            ( <span className=\"warning\"> Invalid username </span> )}\r\n          </div>\r\n          <div className=\"hiddenWrapper\">\r\n            <input\r\n              id=\"loginPassword\"\r\n              className={this.state.validPassword !== false ? \"\" : \"badInput\"}\r\n              onChange={this.handleInput}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              formNoValidate\r\n            />\r\n            {this.state.validPassword !== false? \"\" : \r\n            (<span className=\"warning\"> Your password is too short </span>)}\r\n          </div>\r\n          <div className=\"hiddenWrapper\">\r\n            <input\r\n              onChange={this.handleInput}\r\n              className={this.state.passwordsMatch !== false ? \"\" : \"badInput\"}\r\n              id=\"confirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              formNoValidate\r\n            />\r\n            {this.state.passwordsMatch !== false? \"\" : (<span className=\"warning\"> Passwords doesn't match! </span>)}\r\n          </div>\r\n          <div className=\"hiddenWrapper\">\r\n            <input\r\n              id=\"signup-button\"\r\n              onClick={this.signupRequestSender}\r\n              type=\"button\"\r\n              value=\"Sign up\"\r\n              disabled={\r\n                !this.state.validUsername ||\r\n                !this.state.validPassword ||\r\n                !this.state.passwordsMatch\r\n              }\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SignupPage;\r\n","import React from \"react\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport SignupPage from \"./SignupPage\";\r\n\r\nclass AuthenticationPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userAlreadyRegistered: false\r\n    };\r\n    this.userWantsToLogin = this.userWantsToLogin.bind(this);\r\n    this.userWantsToRegister = this.userWantsToRegister.bind(this);\r\n  }\r\n  userWantsToLogin() {\r\n    this.setState({ userAlreadyRegistered: true });\r\n  }\r\n  userWantsToRegister() {\r\n    this.setState({ userAlreadyRegistered: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n          <h3>Welcome to the guestbook</h3>\r\n          {this.state.userAlreadyRegistered ? (\r\n            <div>\r\n              <LoginPage />\r\n              <p>\r\n                Don't have an account?{\" \"}\r\n                <span className=\"clickable\" onClick={this.userWantsToRegister}>\r\n                  Rigister\r\n                </span>{\" \"}\r\n                instead!\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <SignupPage />\r\n              <p>\r\n                Have an account already?{\" \"}\r\n                <span className=\"clickable\" onClick={this.userWantsToLogin}>\r\n                  Login\r\n                </span>{\" \"}\r\n                instead!\r\n              </p>\r\n            </div>\r\n          )}\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AuthenticationPage;\r\n","import React from \"react\";\r\n\r\nclass NotificationsPannel extends React.Component {\r\n\r\n  /*\r\n    Required props\r\n    --------------\r\n    this.props.isOpen = parent.state.notificationsPannelOpen\r\n    this.props.notifications = parent.state.unread\r\n    this.props.clickCallback = parent.selectUser\r\n  */\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"notificationPanel\" hidden={!this.props.isOpen}>\r\n        {this.props.notifications.map(notif => (\r\n          <li\r\n            data-msg={notif._id}\r\n            data-user={notif.sender}\r\n            data-time={notif.time}\r\n            data-status={notif.status}\r\n            onClick={() => {\r\n              this.props.clickCallback({\r\n                username: notif.senderName,\r\n                _id: notif.sender\r\n              });\r\n            }}\r\n          >\r\n            <b>{notif.senderName}: </b>\r\n            {notif.content.substring(0, 10)}\r\n            {notif.content.length > 10 ? \"...\" : \"\"}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotificationsPannel;\r\n","import React from \"react\";\r\n\r\nclass ChatBox extends React.Component {\r\n  /*\r\n    Required props\r\n    --------------\r\n      this.props.messages = parent.state.chat\r\n      this.props.user = parent.state.selectedContact\r\n      this.props.onMessageEdit = parent.requestEditingMessage\r\n      this.props.onMessageDelete = parent.requestMessageDelete\r\n      this.props.onMessageSubmit = parent.sendMessage\r\n  */\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"chatBox\"\r\n        hidden={this.props.messages === undefined || this.props.messages === false}\r\n      >\r\n        <div className=\"chatStatus\">\r\n          <h3>\r\n            {this.props.user.username\r\n              ? this.props.user.username\r\n              : \"Choose a guest to message\"}\r\n            {this.props.user.username ? (\r\n              <span className=\"navRight clickable\" onClick={this.closeChat}>\r\n                X\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </h3>\r\n        </div>\r\n        <ul>\r\n          {this.props.messages === undefined ? (\r\n            <div>\r\n              <li>No contact selected!</li>\r\n              <li>Welcome to the guestbook app</li>\r\n            </div>\r\n          ) : this.props.messages === false ? (\r\n            <div>\r\n              <li>Hang on! the chat is loading...</li>\r\n            </div>\r\n          ) : this.props.messages.length ? (\r\n            this.props.messages.map(msg => (\r\n              <li\r\n                id={msg._id}\r\n                data-time={msg.time}\r\n                data-status={msg.status}\r\n                className={\r\n                  msg.sender === this.props.user._id\r\n                    ? \"\"\r\n                    : \"sentMessage\"\r\n                }\r\n              >\r\n                {msg.content}\r\n                {msg.sender === this.props.user._id ? (\r\n                  \"\"\r\n                ) : (\r\n                  <p className=\"msgfooter\">\r\n                    <span\r\n                      className=\"clickable\"\r\n                      onClick={() => {\r\n                        this.props.onMessageEdit(msg._id, msg.content);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      🖊{\" \"}\r\n                    </span>\r\n                    <span\r\n                      className=\"clickable\"\r\n                      onClick={() => {\r\n                        this.props.onMessageDelete(msg._id);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      🗑{\" \"}\r\n                    </span>\r\n                  </p>\r\n                )}\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <div>\r\n              <p>\r\n                Nothing here\r\n                <br /> Try sending a message\r\n              </p>\r\n            </div>\r\n          )}\r\n        </ul>\r\n        <form onSubmit={e => this.props.onMessageSubmit(e)} className=\"messagingForm\">\r\n          <input\r\n            id=\"messageInputBox\"\r\n            placeholder=\"Write a message\"\r\n            type=\"text\"\r\n          />\r\n          <input type=\"submit\" value=\"Send\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatBox;\r\n","import React from \"react\";\r\n\r\nclass ContactList extends React.Component {\r\n\r\n /*\r\n    Required props\r\n    --------------\r\n      this.props.isOpen = parent.state.guestsListOpen\r\n      this.props.users = parent.state.guests\r\n      this.props.clickCallback = parent.selectUser\r\n */\r\n\r\n  render() {\r\n    return (\r\n      <ol className=\"guests\" hidden={!this.props.isOpen}>\r\n        <li>\r\n          <h2>Guests</h2>\r\n        </li>\r\n        {this.props.users.map(user => (\r\n          <li\r\n            data-time={user.registered}\r\n            data-id={user._id}\r\n            onClick={() => {\r\n              this.props.clickCallback(user);\r\n            }}\r\n          >\r\n            {user.username}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport NotificationsPannel from \"./NotificationsPannel\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var deviceWidth = Math.floor(window.innerWidth / 300); // This will define how many components can the window be horizontally divided into\r\n    var guestsListOpen = true;\r\n    var notificationsPannelOpen = deviceWidth > 1 ? true : false;\r\n    var selectedContact = {}; // This will change when the user opens chat with anyone\r\n    this.state = {\r\n      lastStatusUpdate: 0,\r\n      deviceWidth: deviceWidth,\r\n      guestsListOpen: guestsListOpen,\r\n      notificationsPannelOpen: notificationsPannelOpen,\r\n      selectedContact: selectedContact,\r\n      guests: [], // This will up an up to date list of registered users\r\n      chat: undefined, // This will be an array of messages with the 'selectedContact'\r\n      unread: [] // This will represent the content of the notifications pannel\r\n    };\r\n    this.requestUpdates = this.requestUpdates.bind(this);\r\n    this.handleUpdates = this.handleUpdates.bind(this);\r\n    this.selectUser = this.selectUser.bind(this);\r\n    this.renderMessagesApiResponse = this.renderMessagesApiResponse.bind(this);\r\n    this.handleMessageSendingApiResponse = this.handleMessageSendingApiResponse.bind(\r\n      this\r\n    );\r\n    this.toggleNotificationsPannel = this.toggleNotificationsPannel.bind(this);\r\n    this.requestMessageDelete = this.requestMessageDelete.bind(this);\r\n    this.handleMessageDeletion = this.handleMessageDeletion.bind(this);\r\n    this.requestEditingMessage = this.requestEditingMessage.bind(this);\r\n    this.handleEditingMessage = this.handleEditingMessage.bind(this);\r\n    this.closeChat = this.closeChat.bind(this);\r\n    this.sendMessage = this.sendMessage.bind(this);\r\n    //this.requestUpdates();\r\n  }\r\n  toggleNotificationsPannel() {\r\n    this.setState({ notificationsPannelOpen : !this.state.notificationsPannelOpen});\r\n  }\r\n  componentDidMount() {\r\n    this.requestUpdates();\r\n    this.updateInterval = setInterval(this.requestUpdates, 5000);\r\n  }\r\n  requestUpdates() {\r\n    console.log(\"Requesting status updates from the server\");\r\n    let uri = \"/notification?index=\" + this.state.lastStatusUpdate;\r\n    api(\"GET\", uri, this.handleUpdates); // eslint-disable-line\r\n  }\r\n  handleUpdates(e) {\r\n    console.log(\"Server responce arrived\");\r\n    switch (e.target.status) {\r\n      case 200:\r\n        var apiResponse = JSON.parse(e.target.response);\r\n        if (apiResponse.messages) {\r\n          beep.play(); // eslint-disable-line\r\n          console.log(\r\n            apiResponse.messages.length + \" new messages has arrived\"\r\n          );\r\n          var newState = this.state;\r\n          apiResponse.messages.forEach(msg => {\r\n            newState.unread.push(msg);\r\n            if (\r\n              newState.selectedContact &&\r\n              msg.sender === newState.selectedContact._id\r\n            ) {\r\n              this.selectUser(newState.selectedContact);\r\n            }\r\n          });\r\n        }\r\n        if (apiResponse.users) {\r\n          console.log(apiResponse.users.length + \" new users are registered\");\r\n          apiResponse.users.forEach(user => {\r\n            newState.guests.push(user);\r\n          });\r\n        }\r\n        if (apiResponse.users) {\r\n          var timeLastRegisteredUser =\r\n            apiResponse.users[apiResponse.users.length - 1].registered;\r\n          if (timeLastRegisteredUser > newState.lastStatusUpdate)\r\n           newState.lastStatusUpdate = timeLastRegisteredUser;\r\n        }\r\n        if (apiResponse.messages) {\r\n          var timeLastUnreadMessage =\r\n            apiResponse.messages[apiResponse.messages.length - 1].time;\r\n          if (timeLastUnreadMessage > newState.lastStatusUpdate)\r\n          newState.lastStatusUpdate = timeLastUnreadMessage;\r\n        }\r\n        this.setState(newState);\r\n        break;\r\n      case 204:\r\n        console.log(\r\n          \"Status updates successfully delivered from the server! No new messages.\"\r\n        );\r\n        break;\r\n      case 401:\r\n        console.log(\r\n          \"Server responded with 401! Looks like your login session has expired.\"\r\n        );\r\n        break;\r\n      default:\r\n        console.log(\"Unable to get status updates from the server!\");\r\n        console.log(e);\r\n    }\r\n  }\r\n  renderMessagesApiResponse(e) {\r\n    console.log(\"Server response arrived\");\r\n    switch (e.target.status) {\r\n      case 200:\r\n        console.log(\"Messages fetched successfully\");\r\n        var apiResponse = JSON.parse(e.target.response);\r\n        console.log(apiResponse);\r\n        if (typeof (this.state.chat) !== \"object\") this.setState({chat : []});\r\n        var newState = this.state;\r\n        apiResponse.forEach(msg => {\r\n          newState.chat.push(msg);\r\n        });\r\n        let currentUser = newState.selectedContact._id;\r\n        newState.unread = newState.unread.filter(function(msg) {\r\n          return msg.sender !== currentUser;\r\n        });\r\n        this.setState(newState);\r\n        break;\r\n      case 204:\r\n        console.log(\"No Messages\");\r\n        if (this.state.chat === false) {\r\n          this.setState({ chat : []});\r\n        }\r\n        break;\r\n      //case 404:\r\n      //break;\r\n      //case 401:\r\n      //break;\r\n      default:\r\n        console.log(\"Something went wrong\");\r\n    }\r\n  }\r\n  selectUser(user) {\r\n    this.setState({ selectedContact : user,\r\n    chat : false});\r\n    api(\"GET\", \"/messages/\" + user._id, this.renderMessagesApiResponse); // eslint-disable-line\r\n    if (this.state.deviceWidth < 2) {\r\n      this.setState({ notificationsPannelOpen : false, guestsListOpen : false});\r\n    }\r\n  }\r\n  handleMessageSendingApiResponse(e) {\r\n    var msgInput = document.querySelector(\"#messageInputBox\");\r\n    msgInput.classList.remove(\"loading\");\r\n    switch (e.target.status) {\r\n      case 200:\r\n        console.log(\"Message delivered successfully!\");\r\n        var apiResponse = JSON.parse(e.target.response);\r\n        console.log(apiResponse);\r\n        var newChat = this.state.chat;\r\n        newChat.push(apiResponse);\r\n        this.setState({chat : newChat});\r\n        msgInput.value = \"\";\r\n        break;\r\n      //case 404:\r\n      //break;\r\n      //case 401:\r\n      //break;\r\n      default:\r\n        console.log(\"Failed to send message\");\r\n    }\r\n  }\r\n  sendMessage(e) {\r\n    e.preventDefault();\r\n    var msgInput = document.querySelector(\"#messageInputBox\");\r\n    api(// eslint-disable-line\r\n      \"POST\",\r\n      \"/message/\" + this.state.selectedContact._id, \r\n      this.handleMessageSendingApiResponse,\r\n      { content: msgInput.value }\r\n    );\r\n    msgInput.classList.add(\"loading\");\r\n  }\r\n  handleMessageDeletion(e, id) {\r\n    var msg = document.getElementById(id);\r\n    msg.classList.remove(\"loading\");\r\n    switch (e.target.status) {\r\n      case 204:\r\n        this.setState({ chat : this.state.chat.filter(msg => {\r\n          return msg._id !== id;\r\n        })});\r\n        break;\r\n      default:\r\n        alert(\"Failed to delete message!\");\r\n    }\r\n  }\r\n  handleEditingMessage(e, id, newContent) {\r\n    var msg = document.getElementById(id);\r\n    msg.classList.remove(\"loading\");\r\n    switch (e.target.status) {\r\n      case 204:\r\n        var newChat = this.state.chat;\r\n        for (var i = 0; i < newChat.length; i++) {\r\n          if (newChat[i]._id === id) {\r\n            newChat[i].content = newContent;\r\n          }\r\n        }\r\n        this.setState({ chat : newChat });\r\n        break;\r\n      default:\r\n        alert(\"Failed to edit message!\");\r\n    }\r\n  }\r\n  requestEditingMessage(id, currentMsg) {\r\n    let newMsg = prompt(\"Edit message\", currentMsg);\r\n    if (!newMsg || !newMsg.length) return;\r\n    var msg = document.getElementById(id);\r\n    msg.classList.add(\"loading\");\r\n    let handler = this.handleEditingMessage;\r\n    api(// eslint-disable-line\r\n      \"PATCH\",\r\n      \"/message/\" + id, \r\n      function(e) {\r\n        handler(e, id, newMsg);\r\n      },\r\n      { content: newMsg }\r\n    );\r\n  }\r\n  requestMessageDelete(id) {\r\n    if (!window.confirm(\"Are you sure you want to delete this message?\"))\r\n      return;\r\n    var msg = document.getElementById(id);\r\n    msg.classList.add(\"loading\");\r\n    let handler = this.handleMessageDeletion;\r\n    api(// eslint-disable-line\r\n      \"DELETE\",\r\n      \"/message/\" + id, \r\n      function(e) {\r\n        handler(e, id);\r\n      }\r\n    );\r\n  }\r\n  closeChat() {\r\n    this.setState({ selectedContact : {}, chat : false, guestsListOpen : true});\r\n  }\r\n  logout(){\r\n    if(!window.confirm(\"Are you sure you want to log out?\")) return;\r\n    document.cookie = 'guestname=; expires=Thu, 01-Jan-1970 00:00:01 GMT;';\r\n    document.cookie = 'sessionid=; expires=Thu, 01-Jan-1970 00:00:01 GMT;';\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"navBar\">\r\n          <h2>\r\n            <span className=\"navLeft\">\r\n              Welcome to The GuestBook {this.props.login}!\r\n            </span>\r\n            <span\r\n              onClick={this.logout}\r\n              className=\"navRight clickable\"\r\n            > ⮫ \r\n            </span>\r\n            <span\r\n              onClick={this.toggleNotificationsPannel}\r\n              className=\"navRight clickable\"\r\n            >\r\n              {\" \"}\r\n              ✉ {this.state.unread.length}{\" \"}\r\n            </span>\r\n          </h2>\r\n        </div>\r\n        <div className=\"mainPageContainer\">\r\n          <ContactList \r\n            isOpen = {this.state.guestsListOpen}\r\n            users = {this.state.guests}\r\n            clickCallback = {this.selectUser}\r\n          />\r\n          <ChatBox       \r\n            messages = {this.state.chat}\r\n            user = {this.state.selectedContact}\r\n            onMessageEdit = {this.requestEditingMessage}\r\n            onMessageDelete = {this.requestMessageDelete}\r\n            onMessageSubmit = {this.sendMessage}\r\n          />\r\n          <NotificationsPannel \r\n            isOpen={this.state.notificationsPannelOpen}\r\n            notifications={this.state.unread}\r\n            clickCallback={this.selectUser}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MainPage;\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport AuthenticationPage from './components/AuthenticationPage.js';\r\nimport MainPage from './components/MainPage.js';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (-1 === document.cookie.indexOf(\"guestname\")) {\r\n      //Then this visitor isn't logged in\r\n      this.state = {\r\n        login: false\r\n      };\r\n    } else {\r\n      this.state = {\r\n        login: document.cookie.split(\"guestname=\", 2)[1].split(\";\", 2)[0]\r\n      };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const login = this.state.login;\r\n    let page;\r\n    if (login) {\r\n      page = <MainPage login = {login}/>;\r\n    } else {\r\n      page = <AuthenticationPage />;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n          {page}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}